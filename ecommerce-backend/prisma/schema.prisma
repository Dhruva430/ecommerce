// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int              @id @default(autoincrement()) @map("id")
  email        String           @unique
  firstName    String
  lastName     String
  address      String?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  Cart         Cart[]
  order        Order[]
  credential   UserCredential[]
  CheckoutInfo CheckoutInfo?
}

model UserCredential {
  id       Int    @id @default(autoincrement())
  userId   Int
  password String // Encoded password
  user     User   @relation(fields: [userId], references: [id])
}

model Order {
  id           Int            @id @default(autoincrement())
  userId       Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  User         User           @relation(fields: [userId], references: [id])
  orderProduct OrderProduct[]
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  productId Int
  orderId   Int
  price     Float
  quantity  Int     @default(1)
  order     Order   @relation(fields: [orderId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  price     Float
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  Product   Product  @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
}

model CheckoutInfo {
  id     Int  @id @default(autoincrement()) @map("id")
  data   Json
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String
  description  String?
  price        Float
  imageUrl     String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Cart         Cart[]
  orderProduct OrderProduct[]
}
